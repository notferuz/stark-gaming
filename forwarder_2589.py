from telethon import TelegramClient, events
from flask import Flask
import threading

# --- Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è wake-up (cron ping) ---
app = Flask(__name__)

@app.route("/")
def home():
    return "Bot for *2589 is alive ‚úÖ", 200

def run_flask():
    app.run(host="0.0.0.0", port=8080)

# --- Telegram API credentials ---
api_id = 22748776
api_hash = '55151aab140082edf288767069a4f3de'

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –æ—Ç–¥–µ–ª—å–Ω–æ
client = TelegramClient('forwarder_session_2589', api_id, api_hash)

# –ì—Ä—É–ø–ø–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
target_group_id = -4691714145

# –•—Ä–∞–Ω–∏–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ö—ç—à—É —Ç–µ–∫—Å—Ç–∞
handled_messages = set()

@client.on(events.NewMessage(incoming=True))
async def handler(event):
    text = event.raw_text.strip()
    message_hash = hash(text)

    if message_hash not in handled_messages and 'üéâ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' in text and 'üí≥ HUMOCARD *2589' in text:
        handled_messages.add(message_hash)

        # –í—ã–¥–µ–ª—è–µ–º –∂–∏—Ä–Ω—ã–º –∫–ª—é—á–µ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
        lines = text.split('\n')
        formatted_lines = []
        for line in lines:
            if 'üéâ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' in line or '‚ûï' in line:
                line = f"<b>{line}</b>"
            formatted_lines.append(line)

        formatted_text = "\n".join(formatted_lines)
        custom_message = f"<b>Bar</b>\n{formatted_text}"

        await client.send_message(target_group_id, custom_message, parse_mode='html')

# --- –ó–∞–ø—É—Å–∫–∞–µ–º Flask + Telegram –∫–ª–∏–µ–Ω—Ç–∞ ---
threading.Thread(target=run_flask).start()

client.start()
print("Userbot for *2589 is running ‚úÖ")
client.run_until_disconnected()
